// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    /*  
        Rengang Yang
        CSCE 312 Section 503
        UIN: 526009738
        Project 3

        PC.hdl
    */

    Register(in=finalIn, load=true, out=out, out=currVal);
    /*
        Based on the tst file, my conclusions for the OOP (order of operations)
        is as follows:
        Reset > load > inc
    */
    // chooses the incremented value or previous value in register
    Inc16(in=currVal, out=incrementedCurr);
    Mux16(a=currVal, b=incrementedCurr, sel=inc, out=incCondMux);

    // chooses current or previous mux output
    Mux16(a=incCondMux, b=in, sel=load, out=loadCondMux);

    // chooses reset or previous mux output
    Mux16(a=loadCondMux, b=false, sel=reset, out=finalIn);
}
