// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU-nostat.hdl

/**
 * The ALU (Arithmetic Logic Unit).
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * In addition, the ALU computes two 1-bit outputs:
 */

// Implementation: the ALU logic manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) set x = 0        // 16-bit constant
// if (nx == 1) set x = !x       // bitwise not i.e. 1's complement
// if (zy == 1) set y = 0        // 16-bit constant
// if (ny == 1) set y = !y       // bitwise not i.e. 1's complement
// if (f == 1)  set out = x + y  // integer 2's complement addition
// if (f == 0)  set out = x & y  // bitwise and
// if (no == 1) set out = !out   // bitwise not i.e. 1's complement

CHIP ALU-nostat {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // bitwise not (1's complement) the x input?
        zy, // zero the y input?
        ny, // bitwise not (1's complement) the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // bitwise not (1's complement) the out output?

        // did you mean 2's complement? lol ðŸ˜…ðŸ˜…ðŸ˜…ðŸ˜…ðŸ˜…

    OUT 
        out[16]; // 16-bit output

    PARTS:        
    /*
        Rengang (Angelo) Yang
        CSCE 312 Section 503
        UIN: 526009738
    */

    // 2 shift-by-8's = cleared register.
    //handles zx (zeroes out x)
    LeftLogicBitshift(x=x, y[3]=zx, out=shiftX1);
    LeftLogicBitshift(x=shiftX1, y[3]=zx, out=output, out=x);

    //handles nx (negates x)
    Mux16(a=false, b=true, sel=nx, out=nx16); // makes nx to 16 bit signal.
    // thanks to: http://nand2tetris-questions-and-answers-forum.32033.n3.nabble.com/Internal-pin-to-bus-td4026005.html
    // for the suggestion.
    Not16(in=x, out=notX);
    And16(a=notX, b=nx16, out=x);

    //handles zy
    LeftLogicBitshift(x=y, y[3]=zy, out=shiftY1);
    LeftLogicBitshift(x=shiftY1, y[3]=zy, out=y);

    // handles ny (negates y)
    Mux16(a=false, b=true, sel=ny, out=ny16);
    Not16(in=y, out=notY);
    And16(a=notY, b=ny16, out=y);


    // handles f (adds x and y)
    Mux16(a=false, b=true, sel=f, out=f16);
    Add16(a=x, b=y, out=addXY);
    And16(a=addXY, b=f16, out=out);

    // handles no (bitwise not of output.)
    Mux16(a=false, b=true, sel=no, out=no16);
    Negation(in=output, out=NegOutput);
    And16(a=NegOutput, b=no16, out=output);



}